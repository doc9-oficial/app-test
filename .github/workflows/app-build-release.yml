name: Build e Release App

on:
  push:
    tags:
      - "v*" # Dispara em tags como v1.0.0
  workflow_dispatch:
    inputs:
      create_tag:
        description: "Criar tag com versão do manifest?"
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extrair dados do manifest
        id: manifest
        run: |
          # Extrai nome e versão do manifest.json usando jq
          APP_NAME=$(jq -r '.name' manifest.json)
          VERSION=$(jq -r '.version' manifest.json)

          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Dados extraídos do manifest: Nome=$APP_NAME, Versão=$VERSION"

      - name: Criar tag automática (se necessário)
        if: github.event.inputs.create_tag == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.manifest.outputs.version }}" -m "Release v${{ steps.manifest.outputs.version }}"
          git push origin "v${{ steps.manifest.outputs.version }}"

      - name: Build
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Criar ZIP
        run: |
          # Usa dados do manifest ou da tag
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # Se foi disparado por uma tag, extrair a versão da tag
            TAG="${{ github.ref_name }}"
            VERSION=${TAG#v}
          else
            # Usa a versão do manifest
            VERSION="${{ steps.manifest.outputs.version }}"
          fi

          APP_NAME="${{ steps.manifest.outputs.app_name }}"

          echo "Criando ZIP para $APP_NAME versão $VERSION"
          zip -r app-$APP_NAME-$VERSION.zip dist manifest.json README.md

      - name: Criar Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: "${{ steps.manifest.outputs.app_name }} v${{ steps.manifest.outputs.version }}"
          body: "Release automática gerada a partir do manifest.json"
          files: app-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
